#!/bin/bash
#PBS -l nodes=1:ppn=8
####PBS -l nodes=8
####PBS -l pmem=2gb
#PBS -l walltime=24:00:00
#PBS -N tank2D 
#PBS -A xzl123_collab
#PBS -o outputFileName
#PBS -e errorFileName

#$ -cwd
#$ -j y
#$ -V

# request Bourne shell as shell for job
#$ -S /bin/sh

source $HOME/work/OpenFOAM/OpenFOAM-2.3.x/etc/bashrc

##########################################
#                                        #
#   Output some useful job information.  #
#                                        #
##########################################

NCPU=`wc -l < $PBS_NODEFILE`
NNODES=`uniq $PBS_NODEFILE | wc -l`

echo ------------------------------------------------------
echo ' This job is allocated on '${NCPU}' cpu(s)'
echo 'Job is running on node(s): '
cat $PBS_NODEFILE
echo ------------------------------------------------------
echo PBS: qsub is running on $PBS_O_HOST
echo PBS: originating queue is $PBS_O_QUEUE
echo PBS: executing queue is $PBS_QUEUE
echo PBS: working directory is $PBS_O_WORKDIR
echo PBS: execution mode is $PBS_ENVIRONMENT
echo PBS: job identifier is $PBS_JOBID
echo PBS: job name is $PBS_JOBNAME
echo PBS: node file is $PBS_NODEFILE
echo PBS: number of nodes is $NNODES
echo PBS: current home directory is $PBS_O_HOME
echo PBS: PATH = $PBS_O_PATH

cd $PBS_O_WORKDIR

echo "Starting at "
date

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

#define the number of processors for parallel
numProc=$NCPU

mpiexec -np 8 gravityCurrentFoam -parallel >> log.gravityCurrentFoam

#reconstructPar >> reconstructPar.log

echo "Run completed at "
date

